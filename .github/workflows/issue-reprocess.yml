name: Issue Reprocess Workflow

permissions:
  issues: write
  contents: read

on:
  issue_comment:
    types: [created]

jobs:
  reprocess:
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.issue.state, 'closed') }}

    steps:
      - name: Debug Info
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "Event action: ${{ github.event.action }}"
          echo "Issue labels: ${{ toJSON(github.event.issue.labels) }}"
          echo "Issue state: ${{ github.event.issue.state }}"
          echo "Comment body: ${{ github.event.comment.body }}"

      - name: Check Conditions
        id: check
        run: |
          HAS_ENV_LABEL=$(echo '${{ toJSON(github.event.issue.labels) }}' | jq 'any(.name == "environment")')
          IS_REPROCESS=$(echo '${{ github.event.comment.body }}' | grep -q '^/reprocess$' && echo 'true' || echo 'false')
          echo "Has environment label: $HAS_ENV_LABEL"
          echo "Is reprocess command: $IS_REPROCESS"
          echo "has_env_label=$HAS_ENV_LABEL" >> $GITHUB_OUTPUT
          echo "is_reprocess=$IS_REPROCESS" >> $GITHUB_OUTPUT
          echo "issue_state=${{ github.event.issue.state }}" >> $GITHUB_OUTPUT

      # React to comment if it's a reprocess command
      - name: React to comment
        if: |
          steps.check.outputs.has_env_label == 'true' &&
          steps.check.outputs.is_reprocess == 'true'
        uses: peter-evans/create-or-update-comment@v4.0.0
        with:
          comment-id: ${{ github.event.comment.id }}
          reactions: '+1'

      - name: Checkout code
        if: |
          steps.check.outputs.has_env_label == 'true' &&
          steps.check.outputs.is_reprocess == 'true'
        uses: actions/checkout@v4

      - name: Process configuration
        if: |
          steps.check.outputs.has_env_label == 'true' &&
          steps.check.outputs.is_reprocess == 'true'
        id: process
        uses: ./.github/actions/process-config
        with:
          issue-body: ${{ github.event.issue.body }}
          issue-title: ${{ github.event.issue.title }}
          issue-number: ${{ github.event.issue.number }}
          trigger-type: 'reprocess'
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get previous config
        if: |
          steps.check.outputs.has_env_label == 'true' &&
          steps.check.outputs.is_reprocess == 'true'
        uses: peter-evans/find-comment@v3.1.0
        id: previous-config
        with:
          issue-number: ${{ github.event.issue.number }}
          comment-author: 'github-actions[bot]'
          body-includes: '<!-- CONFIG_HASH='

      - name: Check config changes
        if: |
          steps.check.outputs.has_env_label == 'true' &&
          steps.check.outputs.is_reprocess == 'true'
        id: check-changes
        uses: actions/github-script@v7
        with:
          script: |
            try {
              // Check if previous comment exists
              const hasComment = '${{ steps.previous-config.outputs.comment-id }}' !== '';
              if (!hasComment) {
                console.log('No previous configuration found, treating as new configuration');
                core.setOutput('values_changed', 'true');
                return;
              }

              const previousComment = `${{ steps.previous-config.outputs.comment-body }}`;
              if (!previousComment) {
                console.log('Previous comment body is empty, treating as new configuration');
                core.setOutput('values_changed', 'true');
                return;
              }

              // Extract hash using string operations
              const hashStart = previousComment.indexOf('CONFIG_HASH=');
              if (hashStart === -1) {
                console.log('No hash found in previous comment, treating as new configuration');
                core.setOutput('values_changed', 'true');
                return;
              }

              const hashStartPos = hashStart + 12; // length of 'CONFIG_HASH='
              const hashEnd = previousComment.indexOf(' -->', hashStartPos);
              if (hashEnd === -1) {
                console.log('Invalid hash format in previous comment, treating as new configuration');
                core.setOutput('values_changed', 'true');
                return;
              }

              const previousHash = previousComment.substring(hashStartPos, hashEnd);
              const currentHash = '${{ steps.process.outputs.config-hash }}';

              console.log('Previous hash:', previousHash);
              console.log('Current hash:', currentHash);

              if (!previousHash || !currentHash) {
                console.log('Missing hash values, treating as changed');
                core.setOutput('values_changed', 'true');
                return;
              }

              const valuesChanged = previousHash !== currentHash;
              console.log('Values changed:', valuesChanged);

              core.setOutput('values_changed', valuesChanged.toString());
            } catch (error) {
              console.error('Error in check config changes:', error);
              console.log('Error details:', {
                hasCommentId: '${{ steps.previous-config.outputs.comment-id }}' !== '',
                commentBody: Boolean('${{ steps.previous-config.outputs.comment-body }}'),
                currentHash: Boolean('${{ steps.process.outputs.config-hash }}')
              });
              core.setOutput('values_changed', 'true');
            }

      - name: Add final comment and close issue
        if: |
          steps.check.outputs.has_env_label == 'true' &&
          steps.check.outputs.is_reprocess == 'true' &&
          steps.process.outputs.is-valid == 'true'
        uses: peter-evans/create-or-update-comment@v4.0.0
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            ## âœ… Configuration Reprocessing Complete

            Your environment configuration has been successfully reprocessed and applied:
            ```shell
            ${{ steps.process.outputs.vars-content }}
            ```

            This issue will be closed automatically as the configuration has been applied.
            If you need to make changes, please create a new configuration issue.

            <!-- CONFIG_PROCESSED -->
          reactions: "+1"

      - name: Close issue
        if: |
          steps.check.outputs.has_env_label == 'true' &&
          steps.check.outputs.is_reprocess == 'true' &&
          steps.process.outputs.is-valid == 'true'
        uses: peter-evans/close-issue@v3
        with:
          issue-number: ${{ github.event.issue.number }}
          comment: false
